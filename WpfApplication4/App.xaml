<Application x:Class="WpfApplication4.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <LinearGradientBrush x:Key="GrayBlueGradientBrush" 
    StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="DarkGray" Offset="0" />
            <GradientStop Color="#CCCCFF" Offset="0.5" />
            <GradientStop Color="DarkGray" Offset="1" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="ColorFocus"  Color="#f13401"/>
        <SolidColorBrush x:Key="ColorSelect"  Color="#fa7a33"/>
        <Style x:Key="MyButtonStyle"  TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#fea66c" />
            <!--<Setter Property="Width" Value="50" />
            <Setter Property="Margin" Value="50" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button" >
                        <Grid Width="{TemplateBinding Width}" 
     Height="{TemplateBinding Height}" ClipToBounds="True">

                            <!-- Outer Rectangle with rounded corners. -->


                            <Ellipse x:Name="outerEllipse"  Fill="Transparent"  HorizontalAlignment="Stretch" 
        VerticalAlignment="Stretch"  Stroke="{TemplateBinding Background}"  StrokeThickness="5"/>

                            <!--<Rectangle x:Name="outerRectangle" 
        HorizontalAlignment="Stretch" 
        VerticalAlignment="Stretch" 
        Stroke="{TemplateBinding Background}" 
        RadiusX="20" RadiusY="20" StrokeThickness="5" 
        Fill="Transparent" />-->



                            <!-- Inner Rectangle with rounded corners. -->
                            <Ellipse x:Name="innerEllipse"   HorizontalAlignment="Stretch" 
        VerticalAlignment="Stretch"  Stroke="Transparent"   StrokeThickness="20" Fill="{TemplateBinding Background}" />

                            <!--<Rectangle x:Name="innerRectangle" 
        HorizontalAlignment="Stretch" 
        VerticalAlignment="Stretch" Stroke="Transparent" 
        StrokeThickness="20" 
        Fill="{TemplateBinding Background}" 
        RadiusX="20" RadiusY="20"   />-->

                            <!-- Present Content (text) of the button. -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" VerticalAlignment="Center" HorizontalAlignment="Center"  
          Content="{TemplateBinding  Content}" 
          TextBlock.Foreground="{TemplateBinding Foreground}" />
                            </DockPanel>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <!-- Set properties when mouse pointer is over the button. -->
                            <Trigger Property="IsMouseOver" Value="True">

                                <!-- Below are three property settings that occur when the 
         condition is met (user mouses over button).  -->
                                <!-- Change the color of the outer rectangle when user 
         mouses over it. -->

                                <Setter Property ="Ellipse.Stroke" TargetName="outerEllipse"
      Value="{StaticResource ColorSelect}" />

                                <!-- Sets the glass opacity to 1, therefore, the 
         glass "appears" when user mouses over it. -->
                                <!--<Setter Property="Ellipse.Opacity" Value="1" TargetName="glassCube" />-->

                                <!-- Makes the text slightly blurry as though you 
         were looking at it through blurry glass. -->
                                <Setter Property="ContentPresenter.BitmapEffect" 
      TargetName="myContentPresenter">
                                    <Setter.Value>
                                        <BlurBitmapEffect Radius="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="true">

                                <Setter Property="Ellipse.Stroke" TargetName="outerEllipse"
      Value="{StaticResource ColorFocus}" />

                            </Trigger>

                           

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style  TargetType="{x:Type Button}">
            <Setter Property="Background"  Value="#fea66c"  />
            <!--<Setter Property="Width" Value="50" />
            <Setter Property="Margin" Value="50" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Width="{TemplateBinding Width}" 
     Height="{TemplateBinding Height}" ClipToBounds="True">

                            <!-- Outer Rectangle with rounded corners. -->


                            <!--<Ellipse x:Name="outerEllipse"  Fill="Transparent"  HorizontalAlignment="Stretch" 
        VerticalAlignment="Stretch"  Stroke="{TemplateBinding Background}"  StrokeThickness="5"/>-->

                            <Rectangle x:Name="outerRectangle" 
        HorizontalAlignment="Stretch" 
        VerticalAlignment="Stretch" 
      
        RadiusX="10" RadiusY="10" StrokeThickness="5" 
        Fill="{TemplateBinding Background}" />



                            <!-- Inner Rectangle with rounded corners. -->
                            <!--<Ellipse x:Name="innerEllipse"   HorizontalAlignment="Stretch" 
        VerticalAlignment="Stretch"  Stroke="Transparent"   StrokeThickness="20" Fill="{TemplateBinding Background}" />-->

                            <!--<Rectangle x:Name="innerRectangle" 
        HorizontalAlignment="Stretch" 
        VerticalAlignment="Stretch" Stroke="Transparent" 
        StrokeThickness="20" 
        Fill="{TemplateBinding Background}" 
        RadiusX="4" RadiusY="4"   />-->

                            <!-- Present Content (text) of the button. -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" VerticalAlignment="Center" HorizontalAlignment="Center"  
          Content="{TemplateBinding  Content}" 
          TextBlock.Foreground="{TemplateBinding Foreground}" />
                            </DockPanel>
                        </Grid>


                        <ControlTemplate.Triggers>

                            <!-- Set properties when mouse pointer is over the button. -->
                            <Trigger Property="IsMouseOver" Value="True">

                                <!-- Below are three property settings that occur when the 
         condition is met (user mouses over button).  -->
                                <!-- Change the color of the outer rectangle when user 
         mouses over it. -->

                                <Setter Property ="Ellipse.Stroke" TargetName="outerRectangle"
      Value="{StaticResource ColorSelect}" />

                                <!-- Sets the glass opacity to 1, therefore, the 
         glass "appears" when user mouses over it. -->
                                <!--<Setter Property="Ellipse.Opacity" Value="1" TargetName="glassCube" />-->

                                <!-- Makes the text slightly blurry as though you 
         were looking at it through blurry glass. -->
                                <Setter Property="ContentPresenter.BitmapEffect" 
      TargetName="myContentPresenter">
                                    <Setter.Value>
                                        <BlurBitmapEffect Radius="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="true">

                                <Setter Property="Ellipse.Stroke" TargetName="outerRectangle"
      Value="{StaticResource ColorFocus}" />

                            </Trigger>



                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                    
                    
                    
                </Setter.Value>
            </Setter>
        </Style>
        <!--<ControlTemplate x:Key="Button" TargetType="{x:Type Page}">
            <Grid/>
        </ControlTemplate>-->

    </Application.Resources>
</Application>
